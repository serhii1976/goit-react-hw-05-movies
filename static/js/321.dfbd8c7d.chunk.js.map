{"version":3,"file":"static/js/321.dfbd8c7d.chunk.js","mappings":"uRAEaA,EAAUC,EAAAA,GAAAA,IAAH,0CAGPC,EAAOD,EAAAA,GAAAA,KAAH,kKAWJE,EAAKF,EAAAA,GAAAA,GAAH,0G,SC4Cf,EAvDe,WAAO,IAAD,EACbG,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA8B3C,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAESF,EAFT,kEAK2BG,EAAAA,EAAAA,IAAgBH,GAL3C,OAKUI,EALV,OAMIR,EAAcQ,EAASC,KAAKC,SANhC,gDAQIC,QAAQC,IAAR,MARJ,0DADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAACT,KAGF,2BACE,UAACZ,EAAD,YACE,UAACE,EAAD,CAAMoB,SA1BZ,SAAsBC,GACpBA,EAAEC,iBACGD,EAAEE,OAAOC,SAASd,MAAMe,MAPL,SAAAf,GAExBD,EAD6B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,CAOGgB,CAAkBL,EAAEE,OAAOC,SAASd,MAAMe,OAF1CE,MAAM,qCAIT,EAmBK,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGvB,EAAWyB,KAAI,SAAAC,GAAK,OACnB,SAAC9B,EAAD,WACE,SAAC,KAAD,CAAM+B,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMjC,GAAxC,SACG6B,EAAMK,SAFFL,EAAME,GADI,UAW9B,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.div`\n  padding: 30px;\n`;\nexport const Form = styled.form`\n  & input {\n    width: 300px;\n    font-size: 20px;\n    padding: 5px;\n  }\n  & button {\n    font-size: 20px;\n    padding: 5px;\n  }\n`;\nexport const Li = styled.li`\n  margin-bottom: 10px;\n  font-size: 20px;\n  & a:hover {\n    color: blue;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'components/FetchAPI';\nimport { Section, Form, Li } from 'pages/Movies/Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!e.target.elements.query.value) {\n      alert('please enter the name of the movie');\n    } else {\n      updateQueryString(e.target.elements.query.value);\n    }\n  }\n  useEffect(() => {\n    async function fetchSearchMovies() {\n      try {\n        if (!query) {\n          return;\n        }\n        const response = await getSearchMovies(query);\n        setMoviesList(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchSearchMovies();\n  }, [query]);\n\n  return (\n    <main>\n      <Section>\n        <Form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"query\"></input>\n          <button type=\"submit\">Search</button>\n        </Form>\n        <ul>\n          {moviesList.map(movie => (\n            <Li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </Li>\n          ))}\n        </ul>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Section","styled","Form","Li","location","useLocation","useState","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchMovies","response","data","results","console","log","fetchSearchMovies","onSubmit","e","preventDefault","target","elements","value","updateQueryString","alert","type","name","map","movie","to","id","state","from","title"],"sourceRoot":""}