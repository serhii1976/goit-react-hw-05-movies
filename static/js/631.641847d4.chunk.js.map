{"version":3,"file":"static/js/631.641847d4.chunk.js","mappings":"mSAEaA,EAAOC,EAAAA,GAAAA,KAAH,0CAGJC,EAASD,EAAAA,GAAAA,OAAH,2JAUNE,EAAUF,EAAAA,GAAAA,IAAH,0CAGPG,EAAQH,EAAAA,GAAAA,IAAH,gEAILI,EAAQJ,EAAAA,GAAAA,GAAH,kEAILK,EAAOL,EAAAA,GAAAA,EAAH,4CAGJM,EAAON,EAAAA,GAAAA,GAAH,2HAQJO,EAAMP,EAAAA,GAAAA,IAAH,+FAKHQ,EAAOR,EAAAA,GAAAA,GAAH,8D,kBCkDjB,EA3EqB,WAAO,IAAD,IACnBS,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAeA,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAgBR,GAF3C,OAEUS,EAFV,OAGIH,EAAUG,EAASC,KAAKL,QACxBD,EAASK,EAASC,MAJtB,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACb,KAECG,EAAO,OAAO,4CAEnB,IAAMW,EAAY,oBAAGhB,EAASiB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,OACE,UAAC5B,EAAD,YACE,SAAC,KAAD,CAAM6B,GAAIH,EAAV,UACE,UAACxB,EAAD,CAAQ4B,KAAK,SAAb,WACE,SAAC,MAAD,IADF,iBAIF,UAAC3B,EAAD,YACE,SAACC,EAAD,CACE2B,IAAG,yCAAoChB,EAAMiB,aAC7CC,IAAI,iBAEN,4BACE,UAAC5B,EAAD,WACGU,EAAMmB,MADT,KACkB,IAAIC,KAAKpB,EAAMqB,cAAcC,cAD/C,QAGA,UAAC/B,EAAD,0BAAmBgC,KAAKC,MAA2B,GAArBxB,EAAMyB,cAApC,QACA,sCACA,SAAClC,EAAD,UAAOS,EAAM0B,YACb,oCACA,SAAClC,EAAD,UACGU,EAAOyB,KAAI,SAAAC,GACV,OAAKA,GAGI,wBAAoBA,EAAMC,MAAjBD,EAAME,KAFf,gEAIV,aAIP,UAACrC,EAAD,YACE,oDACA,2BACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAMoB,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,SAACjB,EAAD,WACE,SAAC,KAAD,CAAMoB,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAlC,8BAMN,SAAC,EAAAoB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.main`\n  padding: 20px;\n`;\nexport const Button = styled.button`\n  padding: 5px;\n  margin-bottom: 20px;\n  width: 150px;\n  font-size: 18px;\n  color: #551a8a;\n  :hover {\n    color: red;\n  }\n`;\nexport const Section = styled.div`\n  display: flex;\n`;\nexport const Image = styled.img`\n  height: 100%;\n  margin-right: 20px;\n`;\nexport const Title = styled.h2`\n  font-weight: bold;\n  font-size: 36px;\n`;\nexport const Text = styled.p`\n  font-size: 20px;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  display: flex;\n  & li {\n    margin-right: 10px;\n  }\n`;\nexport const Div = styled.div`\n  margin-top: 10px;\n  padding-left: 10px;\n  border: 1px solid gray;\n`;\nexport const Item = styled.li`\n  & a:hover {\n    color: blue;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { GetMovieDitails } from 'components/FetchAPI';\nimport { Suspense } from 'react';\nimport {\n  Button,\n  Main,\n  Section,\n  Image,\n  Title,\n  Text,\n  List,\n  Div,\n  Item,\n} from 'pages/MovieDetails/MovieDetails.styled';\nimport { TiArrowLeftOutline } from 'react-icons/ti';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        const response = await GetMovieDitails(movieId);\n        setGenres(response.data.genres);\n        setMovie(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) return <p>Movie not found.</p>;\n\n  const backLinkHref = location.state?.from ?? '/';\n  return (\n    <Main>\n      <Link to={backLinkHref}>\n        <Button type=\"button\">\n          <TiArrowLeftOutline /> Go back\n        </Button>\n      </Link>\n      <Section>\n        <Image\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt=\"movie.title\"\n        />\n        <div>\n          <Title>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </Title>\n          <Text>User Score: {Math.round(movie.vote_average * 10)}%</Text>\n          <h3>Overview</h3>\n          <Text>{movie.overview}</Text>\n          <h3>Genres</h3>\n          <List>\n            {genres.map(genre => {\n              if (!genre) {\n                return <li>there is no information about genres</li>;\n              } else {\n                return <li key={genre.id}>{genre.name}</li>;\n              }\n            })}\n          </List>\n        </div>\n      </Section>\n      <Div>\n        <h3>Additional information</h3>\n        <ul>\n          <Item>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </Item>\n        </ul>\n      </Div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Main","styled","Button","Section","Image","Title","Text","List","Div","Item","location","useLocation","movieId","useParams","useState","movie","setMovie","genres","setGenres","useEffect","GetMovieDitails","response","data","console","log","fetchMovieDetails","backLinkHref","state","from","to","type","src","poster_path","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}